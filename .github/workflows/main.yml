name: Deploy Application

on:
  push:
    branches: [main]  # Triggers the workflow on push to 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest  # Uses the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checks out the repository content

      - name: Set up SSH key and server fingerprints
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          # Show the current user and list home directory contents
          whoami
          ls -la ~/
          
          # Create .ssh directory if it doesn't exist
          mkdir -p ~/.ssh
          ls -la ~/.ssh  # Verify the directory was created or already exists
          
          # Decode SSH key from base64 or direct input
          if [ -n "${{ secrets.SERVER_SSH_KEY_BASE64 }}" ]; then
            echo "${{ secrets.SERVER_SSH_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_rsa
          else
            echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          fi
          
          # Set the correct permissions for the private key
          chmod 600 ~/.ssh/id_rsa
          
          # Add server to known hosts
          ssh-keyscan -t rsa $SERVER_IP >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts  # Optionally display known hosts for debugging

      - name: Execute deployment commands
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Establish an SSH connection and execute commands
          ssh -o BatchMode=yes -i ~/.ssh/id_rsa $SERVER_USER@$SERVER_IP << 'EOF'
          echo "Navigating to the project directory..."
          cd /path/to/your/project || exit 1
          
          echo "Pulling latest changes from Git repository..."
          git pull || exit 1

          echo "Installing project dependencies..."
          npm install || exit 1

          echo "Building the project..."
          npm run build || exit 1

          echo "Restarting the application with PM2..."
          pm2 restart all || exit 1

          echo "Deployment successful"
          EOF
