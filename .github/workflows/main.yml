name: Deploy Application

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo "Setting up SSH environment..."
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Execute deployment commands
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "Starting deployment to server..."
          ssh -T -o BatchMode=yes -o StrictHostKeyChecking=no -vvv -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "\
          echo 'Deploying application...'; \
          export NVM_DIR='/root/.nvm'; \
          [ -s '$NVM_DIR/nvm.sh' ] && . '$NVM_DIR/nvm.sh'; \
          nvm install 18; \
          nvm use 18; \
          cd /home/ec2-user/labx || exit 1; \
          git config --global --add safe.directory /home/ec2-user/labx; \
          sudo chown -R ec2-user:ec2-user /home/ec2-user/labx; \
          sudo chmod -R 755 /home/ec2-user/labx; \
          sudo chmod -R 755 /home/ec2-user/labx/.next; \
          sudo chmod -R 755 /home/ec2-user/labx/node_modules; \
          npm install; \
          npm run build; \
          sudo npm install -g pm2; \
          pm2 restart my-nextjs-app --update-env; \
          pm2 save; \
          echo 'Deployment completed successfully.'; \
          "

      - name: Debug SSH connection
        if: failure()
        run: |
          echo "Debugging SSH connection..."
          ssh -vvv -T -o BatchMode=yes -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} exit

      - name: Post-deployment success confirmation
        if: success()
        run: |
          echo "Deployment successful! All steps completed without errors."

      - name: Check server status
        if: success()
        run: |
          echo "Checking server status..."
          ssh -T -o BatchMode=yes -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "pm2 status"
