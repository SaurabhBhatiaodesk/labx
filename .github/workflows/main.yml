name: Deploy Application

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo "üîë Setting up SSH environment..."
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Install NVM and Node.js
        run: |
          echo "‚¨á Installing NVM..."
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
          nvm install 18
          nvm use 18

      - name: Prepare deployment script
        run: |
          echo "üìú Creating deployment script..."
          cat << 'EOF' > deploy_script.sh
          #!/bin/bash
          sudo chown -R ec2-user:ec2-user /home/ec2-user/labx
          sudo chmod -R 755 /home/ec2-user/labx
          cd /home/ec2-user/labx || exit 1
          git config --global --add safe.directory /home/ec2-user/labx
          git stash push --include-untracked || echo "No changes to stash"
          git pull origin main
          rm -rf node_modules package-lock.json .next
          sudo -u ec2-user npm install --legacy-peer-deps
          NODE_OPTIONS="--max-old-space-size=2048" sudo -u ec2-user npm run build
          sudo npm install -g pm2
          pm2 delete all || true
          pm2 start ecosystem.config.js --env production
          pm2 save
          echo "‚úÖ Deployment completed successfully!"
          EOF
          chmod +x deploy_script.sh

      - name: Transfer and execute deployment script
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "üìÇ Transferring and executing deployment script..."
          scp -o StrictHostKeyChecking=no deploy_script.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/tmp/
          ssh -T -o BatchMode=yes -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "sudo -u ec2-user bash /tmp/deploy_script.sh"

      - name: Debug SSH connection (if failed)
        if: failure()
        run: |
          echo "üêõ Debugging SSH connection..."
          ssh -vvv -T -o BatchMode=yes -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} exit

      - name: Post-deployment success confirmation
        if: success()
        run: echo "üéâ Deployment successful! All steps completed without errors."

      - name: Check server status
        if: success()
        run: |
          echo "üì° Checking server status..."
          ssh -T -o BatchMode=yes -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "pm2 status"
