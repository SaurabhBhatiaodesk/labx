name: Deploy Application via SSH

on:
  push:
    branches:
      - main  # Runs this workflow on push events to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Specifies the runner environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checks out the repository content to the runner

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Specifies the Node.js version

      - name: Install dependencies
        run: npm install  # Installs npm dependencies

      - name: Build the project
        run: npm run build  # Runs the build script defined in package.json

      - name: Set up SSH key and server fingerprints
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to Server with Retry Logic
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          delay_seconds: 10  # Waits for 10 seconds between retries
          command: ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=3 -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            echo "Navigating to project directory..."
            cd /path/to/project

            echo "Pulling latest changes from Git repository..."
            git pull

            echo "Restarting the application..."
            pm2 restart all || echo "Failed to restart PM2 processes"

            echo "Deployment completed successfully."
            EOF

      - name: Cleanup SSH Key
        if: always()  # This step runs whether the previous step succeeded or failed
        run: rm -f ~/.ssh/id_rsa  # Removes the SSH key from the runner for security
